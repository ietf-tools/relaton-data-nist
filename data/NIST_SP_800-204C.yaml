---
schema-version: v1.2.9
id: NISTSP800-204C
title:
- content: Implementation of DevSecOps for a microservices-based application with
    service mesh
  language:
  - en
  script:
  - Latn
  format: text/plain
  type: main
link:
- content: https://doi.org/10.6028/NIST.SP.800-204C
  type: doi
type: standard
docid:
- id: NIST SP 800-204C
  type: NIST
  primary: true
- id: 10.6028/NIST.SP.800-204C
  type: DOI
date:
- type: issued
  value: '2022'
contributor:
- person:
    name:
      completename:
        content: Chandramouli, Ramaswamy.
        language:
        - en
  role:
  - type: author
- organization:
    name:
    - content: National Institute of Standards and Technology (U.S.)
    - content: Information Technology Laboratory
  role:
  - type: publisher
abstract:
- content: 'Cloud-native applications have evolved into a standardized architecture
    consisting of multiple loosely coupled components called microservices (often
    typically implemented as containers) that are supported by an infrastructure for
    providing application services, such as service mesh. Both of these components
    are usually hosted on a container orchestration and resource management platform.
    In this architecture, the entire set of source code involved in the application
    environment can be divided into five code types: 1) application code (which embodies
    the application logic), 2) application services code (for services such as session
    establishment, network connection, etc.), 3) infrastructure as code (for provisioning
    and configuring computing, networking, and storage resources), 4) policy as code
    (for defining runtime policies such as zero trust expressed as a declarative code),
    5) and observability as code (for the continuous monitoring of an application
    runtime state). Due to security, business competitiveness, and the inherent structure
    of loosely coupled application components, this class of applications needs a
    different development, deployment, and runtime paradigm. DevSecOps (consisting
    of acronyms for Development, Security, and Operations, respectively) has been
    found to be a facilitating paradigm for these applications with primitives such
    as continuous integration, continuous delivery, and continuous deployment (CI/CD)
    pipelines. These pipelines are workflows for taking the developer s source code
    through various stages, such as building, testing, packaging, deployment, and
    operations supported by automated tools with feedback mechanisms. The objective
    of this document is to provide guidance for the implementation of DevSecOps primitives
    for cloud-native applications with the architecture and code types described above.
    The benefits of this approach for high security assurance and for enabling continuous
    authority to operate (C-ATO) are also discussed.'
  language:
  - en
  script:
  - Latn
  format: text/plain
series:
- title:
    content: NIST special publication; NIST special pub; NIST SP
    format: text/plain
  number: 800-204C
place:
- city: Gaithersburg
  region:
  - name: Maryland
    iso: MD
doctype:
  type: standard
ext:
  schema-version: v1.0.0
